{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"\u535a\u5ba2\u7b80\u4ecb","text":"<p>\u840c\u65b0\u7ec3\u4e60\u5411\u535a\u5ba2\uff0c\u63a8\u8350\u5728 1.5 \u500d\u653e\u5927\u4e0b\u6d4f\u89c8\u3002</p> <p>\u66f4\u65b0\u7b97\u6cd5\u7ade\u8d5b\u548cCS\u4e13\u4e1a\u76f8\u5173\u5185\u5bb9\uff0c\u53ef\u80fd\u5b58\u5728\u90e8\u5206\u7389\u7389\u5c0f\u4f5c\u6587\u3002</p> <p>\u90e8\u5206\u6587\u7ae0\u4ec5\u4f5c\u8bb0\u5f55\u4f7f\u7528\uff0c\u4e0d\u5e26\u6559\u7a0b\u6027\u8d28\u3002</p> <p>\u6d1b\u8c37\u4e3b\u9875\uff1aji_114514</p> <p>codeforce\u4e3b\u9875\uff1aji_114514</p> <p>\u725b\u5ba2\u4e3b\u9875\uff1aSadbo0 </p>"},{"location":"ABC/abc385/","title":"AtCoder Beginner Contest 385 \u90e8\u5206\u9898\u89e3","text":""},{"location":"ABC/abc385/#g","title":"G","text":"<p>\u9898\u76ee\u5b9a\u4e49\u4e86 \\(L(P)\\) \u4e3a\u6392\u5217 \\(P\\) \u524d\u7f00\u6700\u5927\u503c\u7684\u4e2a\u6570\uff0c\\(R(P)\\) \u4e3a\u6392\u5217 \\(P\\) \u540e\u7f00\u6700\u5927\u503c\u7684\u4e2a\u6570\u3002</p> <p>\u8bbe \\(f(n,k)\\) \u4e3a\u957f\u4e3a \\(n\\) \u7684\u6392\u5217\u4e2d\u6ee1\u8db3 \\(L(P)-R(P)=k\\) \u7684\u7f6e\u6362\u6570\u3002</p> <p>\u9996\u5148\u6839\u636e\u5bf9\u79f0\u6027\uff0c\\(L(P)-R(P)=k\\) \u548c\u65b9\u6848\u6570\u548c \\(L(P)-R(P)=-k\\) \u7684\u65b9\u6848\u6570\u662f\u4e00\u6837\u591a\u7684\uff08\u7ffb\u8f6c\u5e8f\u5217\u53ef\u4ee5\u5efa\u7acb\u4e00\u4e00\u6620\u5c04\uff09\uff0c\u5373 \\(f(n,k)=f(n,-k)\\) \u3002</p> <p>\u6ce8\u610f\u5230 1 \u53ea\u6709\u4f4d\u4e8e\u5f00\u5934\u6216\u7ed3\u5c3e\u624d\u6709\u5f71\u54cd\u3002\u6211\u4eec\u5206\u522b\u679a\u4e3e 1 \u7684\u4f4d\u7f6e\u6765\u9012\u63a8 \\(f(n,k)\\) \uff1a</p> <p>\u5f53 1 \u4f4d\u4e8e\u5f00\u5934\u65f6\uff1a\u65b9\u6848\u6570\u4e3a \\(f(n-1,k-1)\\) \u3002</p> <p>\u5f53 1 \u4f4d\u4e8e\u7ed3\u5c3e\u65f6\uff1a\u65b9\u6848\u6570\u4e3a \\(f(n-1,k+1)\\) \u3002</p> <p>\u5f53 1 \u4f4d\u4e8e\u4e2d\u95f4\u65f6\uff1a\u65b9\u6848\u6570\u4e3a \\((n-2)f(n-1,k)\\) \u3002</p> <p>\u6240\u4ee5\u6709\uff1a\\(f(n,k)=f(n-1,k-1)+f(n-1,k+1)+(n-2)f(n-1,k)\\quad(n&gt;1)\\) \u3002</p> <p>\u8003\u8651\u7b2c \\(n\\) \u884c\u7684\u751f\u6210\u51fd\u6570 \\(F_n(x)=\\sum_{k=1-n}^{n-1}f(n,k)x^{k}\\) \u3002</p> <p>\u4e4b\u540e\u82b1\u4e86\u5f88\u4e45\u63a8\u5bfc\u751f\u6210\u51fd\u6570\uff0c\u4f46\u603b\u662f\u5b58\u5728\u4e00\u70b9\u95ee\u9898\uff0c\u53ef\u80fd\u6211\u5728\u8fb9\u754c\u7684\u5904\u7406\u4e0a\u8fd8\u4e0d\u591f\u7cbe\u7ec6\u3002\u653e\u5f03\u65e0\u8111\u5730\u63a8\u5bfc\uff0c\u6211\u9009\u62e9\u4e86\u6709\u8111\u5730\u601d\u8003\u7ec4\u5408\u610f\u4e49\u3002\u53d1\u73b0\u597d\u50cf\u5f88\u7b80\u5355\uff1f\uff1f\uff1f</p> <p>\u8003\u8651\u4ece\u5927\u5230\u5c0f\u53bb\u653e\u7f6e \\(n\\) \u4e2a\u6570\uff0c\u53d1\u73b0\u653e\u5728\u4e2d\u95f4\u4e0d\u4f1a\u5f71\u54cd\u5dee\u503c\u3002\u800c\u653e\u5728\u5f00\u5934\u548c\u7ed3\u5c3e\u53c8\u5206\u522b\u4f1a\u8ba9\u5dee\u503c \\(+1\\) \u548c \\(-1\\) \u3002\u540c\u65f6\u6ce8\u610f\u653e\u4e0b\u7b2c\u4e00\u4e2a\u6570\u4e5f\u4e0d\u4f1a\u6709\u5f71\u54cd\u3002</p> <p>\u4e8e\u662f\uff1a\u5f53 \\(n&gt;1\\) \u65f6\uff0c\\(F_n(x)=\\prod_{i=2}^{n}(x+\\frac{1}{x}+i-2)\\)\u3002</p> <p>\u8ba1\u7b97\u4e0a\u9762\u8fd9\u4e2a\u751f\u6210\u51fd\u6570\u53ef\u4ee5\u5206\u6cbbNTT\uff0c\u6216\u8005\u662f\u542f\u53d1\u5f0f\u5408\u5e76\u3002\u65f6\u95f4\u590d\u6742\u5ea6\u5747\u4e3a \\(O(nlog^2n)\\) \u3002</p> \u4ee3\u7801 <pre><code>#include&lt;bits/stdc++.h&gt;\n#define ll long long\n\nusing namespace std;\n\nconst int mod = 998244353;\n\nint qmi(ll a, ll k)\n{\n    ll res = 1;\n    while (k)\n    {\n        if (k &amp; 1)res = res * a % mod;\n        k &gt;&gt;= 1;\n        a = a * a % mod;\n    }\n    return res;\n}\n\nnamespace NTT {\nconst int g = 3;\nvector&lt;int&gt; Omega(int L) {\n    int wn = qmi(g, mod / L);\n    vector&lt;int&gt; w(L); w[L &gt;&gt; 1] = 1;\n    for (int i = L / 2 + 1; i &lt;= L - 1; i++)w[i] = 1ll * w[i - 1] * wn % mod;\n    for (int i = L / 2 - 1; i; i--)w[i] = w[i &lt;&lt; 1];\n    return w;\n}\nauto W = Omega(1 &lt;&lt; 21); // NOLINT\nvoid DIF(int* a, int n) {\n    for (int k = n &gt;&gt; 1; k; k &gt;&gt;= 1)\n        for (int i = 0, y; i &lt; n; i += k &lt;&lt; 1)\n            for (int j = 0; j &lt; k; j++)\n                y = a[i + j + k], a[i + j + k] = 1ll * (a[i + j] - y + mod) * W[k + j] % mod, a[i + j] = (y + a[i + j]) % mod;\n}\nvoid IDIT(int* a, int n) {\n    for (int k = 1; k &lt; n; k &lt;&lt;= 1)\n        for (int i = 0, x, y; i &lt; n; i += k &lt;&lt; 1)\n            for (int j = 0; j &lt; k; j++)\n                x = a[i + j], y = (1ll * a[i + j + k] * W[k + j]) % mod,\n                a[i + j + k] = x - y &lt; 0 ? x - y + mod : x - y, a[i + j] = (y + a[i + j]) % mod;\n    int Inv = mod - (mod - 1) / n;\n    for (int i = 0; i &lt; n; i++) a[i] = 1ll * a[i] * Inv % mod;\n    reverse(a + 1, a + n);\n}\n//\u7528\u666e\u901a\u6570\u7ec4\u5b9e\u73b0\u7684NTT\u8776\u5f62\u53d8\u5316\n}\nnamespace Polynomial {\nusing Poly = std::vector&lt;int&gt;;\n\n// mul/div int\nPoly&amp; operator*=(Poly&amp; a, int b) { for (auto&amp; x : a) x = 1ll * x * b % mod; return a; }\nPoly operator*(Poly a, int b) { return a *= b; }\nPoly operator*(int a, Poly b) { return b * a; }\nPoly&amp; operator/=(Poly&amp; a, int b) { return a *= qmi(b, mod - 2); }\nPoly operator/(Poly a, int b) { return a /= b; }\n\n// Poly add/sub\nPoly&amp; operator+=(Poly&amp; a, Poly b) {\n    a.resize(max(a.size(), b.size()));\n    for (int i = 0; i &lt; b.size(); i++)a[i] = (a[i] + b[i]) % mod;\n    return a;\n}\nPoly operator+(Poly a, Poly b) { return a += b; }\nPoly&amp; operator-=(Poly&amp; a, Poly b) {\n    a.resize(max(a.size(), b.size()));\n    for (int i = 0; i &lt; b.size(); i++)a[i] = (a[i] - b[i] + mod) % mod;\n    return a;\n}\nPoly operator-(Poly a, Poly b) { return a -= b; }\n\n// Poly mul\nvoid DFT(Poly&amp; a) { NTT::DIF(a.data(), a.size()); }\nvoid IDFT(Poly&amp; a) { NTT::IDIT(a.data(), a.size()); }\nint norm(int n) { return 1 &lt;&lt; (32 - __builtin_clz(n - 1)); }//\u8fd4\u56de\u5927\u4e8e\u7b49\u4e8en\u7684\u6700\u5c0f2\u7684\u6574\u6570\u6b21\u5e42\nvoid norm(Poly&amp; a) { if (!a.empty()) a.resize(norm(a.size()), 0); }//\u5269\u4f59\u7684\u75280\u586b\nPoly&amp; dot(Poly&amp; a, Poly&amp; b) {\n    for (int i = 0; i &lt; a.size(); i++)a[i] = 1ll * a[i] * b[i] % mod;\n    return a;\n}\nPoly operator*(Poly a, Poly b) {\n    int n = a.size() + b.size() - 1, L = norm(n);\n    if (a.size() &lt;= 8 || b.size() &lt;= 8) {\n        Poly c(n);\n        for (int i = 0; i &lt; a.size(); i++)\n            for (int j = 0; j &lt; b.size(); j++)\n                c[i + j] = (c[i + j] + (ll)a[i] * b[j]) % mod;\n        return c;\n    }\n    a.resize(L), b.resize(L);\n    DFT(a), DFT(b), dot(a, b), IDFT(a);\n    return a.resize(n), a;\n}\n\n// Poly inv \u5229\u7528\u725b\u987f\u8fed\u4ee3\u9012\u5f52\u5b9e\u73b0\u7684\u4e58\u6cd5\u9006\nPoly Inv2k(Poly a) { // a.size() = 2^k\n    int n = a.size(), m = n &gt;&gt; 1;\n    if (n == 1) return { qmi(a[0], mod - 2) };\n    Poly b = Inv2k(Poly(a.begin(), a.begin() + m)), c = b;\n    b.resize(n), DFT(a), DFT(b), dot(a, b), IDFT(a);\n    for (int i = 0; i &lt; n; i++) a[i] = i &lt; m ? 0 : mod - a[i];\n    DFT(a), dot(a, b), IDFT(a);\n    return move(c.begin(), c.end(), a.begin()), a;\n}\nPoly Inv(Poly a) {\n    int n = a.size();\n    norm(a), a = Inv2k(a);\n    return a.resize(n), a;\n}\n\n// Poly div/mod\nPoly operator/(Poly a, Poly b) {\n    int k = a.size() - b.size() + 1;\n    if (k &lt; 0) return { 0 };\n    reverse(a.begin(), a.end());\n    reverse(b.begin(), b.end());\n    b.resize(k), a = a * Inv(b);\n    a.resize(k), reverse(a.begin(), a.end());\n    return a;\n}\npair&lt;Poly, Poly&gt; operator%(Poly a, const Poly&amp; b) {\n    Poly c = a / b;\n    a -= b * c, a.resize(b.size() - 1);\n    return { c, a };\n}\n\n//\u6c42\u5bfc\u548c\u79ef\u5206\nPoly deriv(Poly a) {\n    for (int i = 1; i &lt; a.size(); i++) a[i - 1] = 1ll * i * a[i] % mod;\n    return a.pop_back(), a;\n}\n\n//\u6b64\u5904\u5982\u679c\u9884\u5904\u7406\u9006\u5143\u7684\u8bdd\u5927\u6982\u53ef\u4ee5\u4f18\u5316\nPoly integ(Poly a) {\n    a.push_back(0);\n    for (int i = a.size() - 1; i; i--) a[i] = 1ll * a[i - 1] * qmi(i, mod - 2) % mod;\n    return a[0] = 0, a;\n}\n\n// Poly \u8981\u6c42a[0] = 1\nPoly Ln(Poly a) {\n    int n = a.size();\n    a = deriv(a) * Inv(a);\n    return a.resize(n - 1), integ(a);\n}\n\n// Poly exp\nPoly Exp(Poly a) {\n    int n = a.size(), k = norm(n);\n    Poly b = { 1 }, c, d; a.resize(k);\n    for (int L = 2; L &lt;= k; L &lt;&lt;= 1) {\n        d = b, b.resize(L), c = Ln(b), c.resize(L);\n        for (int i = 0; i &lt; L; i++) c[i] = a[i] - c[i] + (a[i] &lt; c[i] ? mod : 0);\n        c[0] = (c[0] + 1) % mod;\n        DFT(b), DFT(c), dot(b, c), IDFT(b);\n        move(d.begin(), d.end(), b.begin());\n    }\n    return b.resize(n), b;\n}\n\nPoly Pow(Poly&amp; a, int b) { return Exp(Ln(a) * b); } // a[0] = 1,\u591a\u9879\u5f0f\u5feb\u901f\u5e42\n\n\n}\nusing namespace Polynomial;\n\nvoid solve()\n{\n    int n, k; cin &gt;&gt; n &gt;&gt; k;\n    k = abs(k);\n    vector&lt;Poly&gt;f(n + 1);\n    f[1].push_back(1);\n    for (int i = 2; i &lt;= n; i++) {\n        f[i].push_back(1);\n        f[i].push_back(i - 2);\n        f[i].push_back(1);\n    }\n    auto CDQ = [&amp;](auto &amp;&amp; self, int l, int r)-&gt;Poly{\n        if (l == r)return f[l];\n        int mid = l + r &gt;&gt; 1;\n        return self(self, l, mid) * self(self, mid + 1, r);\n    };\n    auto res = CDQ(CDQ, 1, n);\n    Poly g(n); g[n - 1] = 1;\n    res = res / g;\n    cout &lt;&lt; res[k] &lt;&lt; '\\n';\n}\n\nint main()\n{\n    ios::sync_with_stdio(0), cin.tie(0), cout.tie(0);\n    int t = 1;\n    while (t--)solve();\n    return 0;\n}\n</code></pre>"},{"location":"CF/2048/","title":"Codeforces Global Round 28 \u4e2a\u4eba\u9898\u89e3","text":""},{"location":"CF/2048/#a","title":"A","text":"<p>\u6ce8\u610f\u5230\uff1a</p> <p>\\(\\sum_{i=0}^{n}x_i*10^i \\equiv \\sum_{i=0}^{n}x_i*(-1)^i  (\\text{mod} \\ 11)\\)</p> <p>\\(\\sum_{i=0}^{n}x_i*10^i \\equiv \\sum_{i=0}^{n}x_i  (\\text{mod} \\ 3)\\)</p> <p>\u6240\u4ee5\u65e0\u8bba\u662f\u5220\u53bb\u8fde\u7eed\u7684 2 \u4e2a 33 \u8fd8\u662f\u51cf\u53bb 33 \u90fd\u4e0d\u4f1a\u6539\u53d8 \\(x\\text{ mod} \\ 33\\) \u7684\u503c\u3002</p> <p>\u4e8e\u662f\u53ef\u4ee5\u5f97\u51fa\u80fd\u8ba9 \\(x\\) \u503c\u4e3a 0 \u7684\u5145\u8981\u6761\u4ef6\u4e3a \\(x \\equiv 0 \\ (\\text{mod} \\ 33)\\)</p> \u4ee3\u7801 <pre><code>#include&lt;bits/stdc++.h&gt;\n#define ll long long\n\nusing namespace std;\n\nvoid solve()\n{\n    int x; cin &gt;&gt; x;\n    if (x &gt;= 33 &amp;&amp; x % 33 == 0)cout &lt;&lt; \"Yes\\n\";\n    else cout &lt;&lt; \"No\\n\";\n}\n\nint main()\n{\n    ios::sync_with_stdio(0), cin.tie(0), cout.tie(0);\n    int t; cin &gt;&gt; t;\n    while (t--)solve();\n    return 0;\n}\n</code></pre>"},{"location":"CF/2048/#b","title":"B","text":"<p>\u5bf9\u4e8e\u6240\u6709\u957f\u5ea6\u4e3a \\(k\\) \u7684\u5b50\u6570\u7ec4\uff0c\u4e00\u4e2a\u6570\u6700\u591a\u51fa\u73b0 \\(k\\) \u6b21\uff0c\u90a3\u4e48\u8981\u60f3\u5145\u5206\u5730\u53bb\u5229\u7528\u90a3\u4e9b\u8f83\u5c0f\u7684\u503c\uff0c\u663e\u7136\u7684\u6784\u9020\u5c31\u662f\u5728\u4e0b\u6807\u4e3a \\(ik(ik&lt;=n)\\) \u7684\u4f4d\u7f6e\u586b \\(i\\)\uff0c\u8fd9\u6837\u5c31\u8fbe\u5230\u4e0b\u754c\u4e86\u3002 \u5176\u4f59\u6570\u968f\u610f\u586b\u5373\u53ef\u3002</p> \u4ee3\u7801 <pre><code>#include&lt;bits/stdc++.h&gt;\n#define ll long long\n\nusing namespace std;\n\nvoid solve()\n{\n    int n, k; cin &gt;&gt; n &gt;&gt; k;\n    vector&lt;int&gt;ans(n + 1);\n    int j = 1;\n    for (int i = k; i &lt;= n; i += k)ans[i] = j++;\n    for (int i = 1; i &lt;= n; i++) {\n        if (i % k == 0)continue;\n        ans[i] = j++;\n    }\n    for (int i = 1; i &lt;= n; i++)cout &lt;&lt; ans[i] &lt;&lt; ' ';\n    cout &lt;&lt; '\\n';\n}\n\nint main()\n{\n    ios::sync_with_stdio(0), cin.tie(0), cout.tie(0);\n    int t; cin &gt;&gt; t;\n    while (t--)solve();\n    return 0;\n}\n</code></pre>"},{"location":"CF/2048/#c","title":"C","text":"<p>\u5148\u8bc1\u660e\u4e00\u4e2a\u6027\u8d28\uff1a\u6700\u4f18\u89e3\u4e00\u5b9a\u6709\u4e00\u4e2a\u4e32\u4e3a\u5176\u672c\u8eab\u3002</p> <p>\u5bf9\u4e8e\u975e\u5168 0 \u4e32\uff0c\u6211\u4eec\u603b\u80fd\u627e\u5230\u4e00\u7ec4\u6700\u4f18\u89e3\u7684\u8f83\u957f\u4e32\u7684\u9996\u4f4d\u4e3a 1\uff0c\u6b64\u65f6\u5bf9\u8be5\u4e32\u5f80\u5de6\u53f3\u6269\u5c55\u90fd\u662f\u4e0d\u52a3\u7684\u3002</p> <p>\u5bf9\u4e8e\u5168 0 \u4e32\uff0c\u7ed3\u8bba\u663e\u7136\u6210\u7acb\u3002</p> <p>\u7136\u540e\u4ece\u8d2a\u5fc3\u7684\u89d2\u5ea6\u6765\u8003\u8651\uff0c\u6211\u4eec\u603b\u662f\u60f3\u8ba9\u66f4\u9ad8\u4f4d\u7684 0 \u53d8\u4e3a 1\uff0c\u800c\u8fd9\u4e2a 0 \u53ef\u80fd\u53d8\u4e3a 1 \u7684 \u6761\u4ef6\u5c31\u662f\u5b83\u524d\u9762\u6709 1\u3002</p> <p>\u90a3\u81ea\u7136\u6709\u4e86\u4e00\u4e2a\u7b97\u6cd5\uff0c\u4ece\u5de6\u5f80\u53f3\u627e\u5230\u7b2c\u4e00\u4e2a\u7b26\u5408\u6761\u4ef6\u7684 0 \uff0c\u8ba9\u5b83\u548c\u524d\u9762\u7684\u6bcf\u4e00\u4e2a 1 \u5bf9\u9f50\uff0c\u7136\u540e\u4ece\u4e2d\u53d6\u51fa\u6700\u5927\u7684\u5c31\u662f\u7b54\u6848\u3002 \u5982\u679c\u4e0d\u5b58\u5728\u8fd9\u6837\u7684 0 \uff08\u5373\u5168 0 \u4e32\u6216\u5168 1 \u4e32\uff0c\u7b54\u6848\u662f\u663e\u7136\u7684\uff09\u3002</p> <p>\u5bf9\u4e0a\u9762\u7684\u6240\u6709\u53ef\u80fd\u7b54\u6848\u66b4\u529b\u6bd4\u8f83\u53ef\u4ee5\u5f97\u5230 \\(O(n^2)\\) \u7b97\u6cd5\u3002</p> <p>\u4ed4\u7ec6\u5206\u6790\u8fd9\u4e2a 0 \u7684\u6027\u8d28\u53ef\u4ee5\u5f97\u51fa \\(O(n)\\) \u7b97\u6cd5\u3002\u56e0\u4e3a\u8fd9\u4e2a 0 \u524d\u9762\u5fc5\u987b\u662f\u4e00\u4e32\u8fde\u7eed 1 \u548c \u4e00\u4e32\u8fde\u7eed\u7684 0\uff0c\u5047\u8bbe\u8fde\u7eed\u7684 1 \u6709 \\(p\\) \u4e2a\uff0c\u540c\u65f6\u6211\u4eec\u8bbe\u8fd9\u4e2a 0 \u6240\u5728\u7684\u90a3\u6bb5 0 \u6709 q \u4e2a\uff0c</p> <p>\u90a3\u4e48\u53ef\u4ee5\u786e\u5b9a\u4e0e 0 \u914d\u5bf9\u7684 1 \u7684\u8ddd\u79bb\u4e3a \\(min(p,q)\\)\u3002\u66f4\u957f\u7684\u60c5\u51b5\u6216\u66f4\u77ed\u7684\u60c5\u51b5\u4f1a\u5bfc\u81f4 0 \u4e0d\u591f\u6216\u8005\u9ad8\u4f4d 1 \u4e22\u5931\u3002</p> \u4ee3\u7801 <pre><code>#include&lt;bits/stdc++.h&gt;\n#define ll long long\n\nusing namespace std;\n\nvoid solve()\n{\n    string s; cin &gt;&gt; s;\n    bool ok = 0;\n    int q = 0, p = 0, n = s.size();\n    for (int i = 0; i &lt; s.size(); i++) {\n        if (!ok) {\n            if (s[i] == '0')continue;\n            else ok = 1, p++;\n        }\n        else {\n            if (s[i] == '1')p++;\n            else {\n                int j = i;\n                while (j &lt; s.size() &amp;&amp; s[j] == '0')q++, j++;\n                cout &lt;&lt; 1 &lt;&lt; ' ' &lt;&lt; n &lt;&lt; ' ';\n                cout &lt;&lt; i - min(p, q) + 1 &lt;&lt; ' ' &lt;&lt; n - min(p, q) &lt;&lt; '\\n';\n                return;\n            }\n        }\n    }\n    cout &lt;&lt; 1 &lt;&lt; ' ' &lt;&lt; n &lt;&lt; ' ' &lt;&lt; n &lt;&lt; ' ' &lt;&lt; n &lt;&lt; '\\n';\n}\n\nint main()\n{\n    ios::sync_with_stdio(0), cin.tie(0), cout.tie(0);\n    int t; cin &gt;&gt; t;\n    while (t--)solve();\n    return 0;\n}\n</code></pre>"},{"location":"CF/2048/#d","title":"D","text":"<p>\u6211\u4eec\u5148\u4e3a\u6bcf\u4e2a\u9898\u76ee\u5b9a\u4e49\u4e00\u4e2a\u4ef7\u503c\uff1a\u5f53\u9898\u76ee\u80fd\u88ab 1 \u53f7\u89e3\u51b3\u65f6\uff0c\u4ef7\u503c\u4e3a 0 \uff0c\u5426\u5219\u5b9a\u4e49\u4e3a\u80fd\u89e3\u51b3\u8fd9\u9053\u9898\u76ee\u7684\u4eba\u6570\u3002 \u8fd9\u4e2a\u4ef7\u503c\u53ef\u4ee5\u53cc\u6307\u9488\u6c42\u51fa\u3002\u8bbe\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u540e\u7b2ci\u4e2a\u9898\u76ee\u4ef7\u503c\u4e3a \\(val[i]\\)\u3002</p> <p>\u5f53\u6bcf\u573a\u6bd4\u8d5b\u9898\u76ee\u6570\u4e3a \\(k\\)\uff0c\u53ef\u4ee5\u786e\u5b9a\u4e00\u5b9a\u662f\u4ece\u5c0f\u5230\u5927\u9009\u4e0d\u65ad\u5730\u9009 \\(k\\) \u4e2a\u9898\u76ee\u4f5c\u4e3a\u4e00\u573a\u6bd4\u8d5b\uff0c\u5e76\u4e14\u8be5\u5904\u6bd4\u8d5b\u6392\u540d\u4e3a\u6240\u9009\u9898\u76ee\u6700\u5927\u4ef7\u503c\u52a0\u4e00\uff0c\u4e5f\u5c31\u662f\u8bf4\u7b54\u6848\u4e3a \\(\\sum_{i=1}^{\\lfloor m/k \\rfloor}(val[ik]+1)\\)\u3002</p> <p>\u76f4\u63a5\u66b4\u529b\u679a\u4e3e\u5373\u53ef\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\u8c03\u548c\u7ea7\u6570 \\(O(nlnn)\\)\u3002</p> \u4ee3\u7801 <pre><code>#include&lt;bits/stdc++.h&gt;\n#define ll long long\n\nusing namespace std;\n\nvoid solve()\n{\n    int n, m; cin &gt;&gt; n &gt;&gt; m;\n    vector&lt;int&gt;a(n), b(m);\n    for (int i = 0; i &lt; n; i++)cin &gt;&gt; a[i];\n    int pos = a[0];\n    sort(a.begin(), a.end());\n    for (int i = 0; i &lt; m; i++)cin &gt;&gt; b[i];\n    sort(b.begin(), b.end());\n    vector&lt;int&gt;v;\n    int i = m - 1, val = 0, j = n - 1;\n    while (i &gt;= 0 &amp;&amp; b[i] &gt; pos) {\n        while (a[j] &gt;= b[i])val++, j--;\n        v.push_back(val);\n        i--;\n    }\n    while (i &gt;= 0)v.push_back(0), i--;\n    sort(v.begin(), v.end());\n    for (int i = 1; i &lt;= m; i++)\n    {\n        ll res = 0;\n        for (int j = i - 1; j &lt; m; j += i)\n        {\n            res += b[j] + 1;\n        }\n        cout &lt;&lt; res &lt;&lt; \" \";\n    }\n    cout &lt;&lt; '\\n';\n}\n\nint main()\n{\n    ios::sync_with_stdio(0), cin.tie(0), cout.tie(0);\n    int t; cin &gt;&gt; t;\n    while (t--)solve();\n    return 0;\n}\n</code></pre>"},{"location":"CF/2048/#e","title":"E","text":"<p>\u56e0\u4e3a\u8981\u6c42\u4e0d\u80fd\u5b58\u5728\u540c\u8272\u73af\u3002\u6240\u4ee5\u5982\u679c\u6211\u4eec\u53ea\u8003\u8651\u67d0\u4e00\u79cd\u989c\u8272\u7684\u8fb9\u7684\u8bdd\uff0c\u6574\u5f20\u56fe\u5c31\u662f\u4e00\u4e2a\u68ee\u6797\u3002\u90a3\u56fe\u6070\u597d\u4e3a\u4e00\u9897\u6811\u65f6\u8fb9\u6570\u6700\u5927\u4e3a \\(2n+m-1\\)\u3002 \u8003\u8651\u6240\u6709\u989c\u8272\uff0c\u6211\u4eec\u6700\u591a\u5b58\u5728 \\(n*(2n+m-1)\\) \u6761\u8fb9\u3002\u8fd9\u4e2a\u6570\u8981\u5927\u4e8e\u7b49\u4e8e \\(2nm\\) \u3002\u5373\uff1a \\(\\(m\\leq2n-1\\)\\) \u8bf4\u660e\u5f53 \\(m\\geq2n\\) \u65f6\u5fc5\u7136\u65e0\u89e3\u3002</p> <p>\u6ce8\u610f\u5230 \\(n\\) \u4e00\u5b9a\u65f6\uff0c\u5982\u679c\u8f83\u5927\u7684 \\(m\\) \u6709\u89e3\uff0c\u90a3\u4e48\u8f83\u5c0f\u7684 \\(m\\) \u4e5f\u6709\u89e3\u3002\u6240\u4ee5\u6211\u4eec\u5c1d\u8bd5\u6784\u9020 \\(m=2n-1\\) \u7684\u60c5\u51b5\uff0c\\(m\\) \u66f4\u5c0f\u7684\u60c5\u51b5\u76f4\u63a5\u622a\u53d6\u90e8\u5206\u8fb9\u5373\u53ef\u3002\u8fd9\u662f\u4e00\u4e2a\u5f88\u7d27\u7684\u6761\u4ef6\uff0c\u5b83\u8981\u6c42\u6bcf\u5f20\u56fe\u90fd\u662f\u4e00\u9897\u6811\u3002</p> <p>\u5c06\u5de6\u90e8\u70b9\u7f16\u53f7\u4e3a\\([1,2n]\\)\uff0c\u53f3\u90e8\u70b9\u7f16\u53f7\\([2n+1,2n+m]\\)\u3002</p> <p>\u6211\u4eec\u4ece\u6700\u7b80\u5355\u7684\u94fe\u51fa\u53d1\uff0c\u5f88\u5bb9\u6613\u60f3\u5230\u5982\u4e0b\u7684\u4e00\u79cd\u989c\u8272\u7684\u94fe\u6784\u9020\uff1a</p> \\[ 1\uff0c2n+1 \uff0c2 \uff0c...\uff0c2n-1 \uff0c2n+n-1 \uff0c2n\\] <p>\u4e5f\u5c31\u662f\u5c06\u53f3\u90e8\u70b9\u63d2\u5728\u5de6\u90e8\u70b9\u4e2d\u95f4\u3002</p> <p>\u5bf9\u4e8e \\(n-1\\) \u79cd\u989c\u8272\u7684\u6784\u9020\uff0c\u6211\u4eec\u53ea\u9700\u8981\u505a\u5982\u4e0b\u7684\u5bf9\u5de6\u90e8\u70b9\u7684\u5faa\u73af\u79fb\u4f4d\u7684\u64cd\u4f5c\u5373\u53ef\uff1a</p> \\[ 3\uff0c2n+1 \uff0c4 \uff0c...\uff0c2n\uff0c2n+n-2\uff0c1 \uff0c2n+n-1 \uff0c2\\] <p>\u7d2f\u79ef\u505a \\(n-1\\) \u6b21\u5faa\u73af\u79fb\u4f4d\u3002</p> <p>\u5206\u6790\u53ef\u4ee5\u786e\u5b9a\u6bcf\u6761\u8fb9\u6070\u597d\u88ab\u67d3\u6210\u4e00\u79cd\u989c\u8272\uff0c\u8fd9\u662f\u4e00\u79cd\u5408\u6cd5\u7684\u6784\u9020\u3002</p> \u4ee3\u7801 <pre><code>#include&lt;bits/stdc++.h&gt;\n#define ll long long\n\nusing namespace std;\n\nvoid solve()\n{\n    int n, m; cin &gt;&gt; n &gt;&gt; m;\n    if (m &gt;= 2 * n)cout &lt;&lt; \"No\\n\";\n    else {\n        cout &lt;&lt; \"Yes\\n\";\n        vector&lt;vector&lt;int&gt;&gt;ans(2 * n, vector&lt;int&gt;(2 * n - 1));\n        for (int c = 0; c &lt; n; c++)\n        {\n            vector&lt;int&gt;v;\n            for (int j = 0; j &lt; 2 * n - 1; j++)\n            {\n                v.push_back((2 * c + j) % (2 * n));\n                v.push_back(j);\n            }\n            for (int i = 1; i &lt; v.size(); i++) {\n                if (i &amp; 1)ans[v[i - 1]][v[i]] = c;\n                else ans[v[i]][v[i - 1]] = c;\n            }\n            ans[(2 * c + 2 * n - 1) % (2 * n)][v.back()] = c;\n        }\n        for (int i = 0; i &lt; 2 * n; i++)\n        {\n            for (int j = 0; j &lt; m; j++)cout &lt;&lt; ans[i][j] + 1 &lt;&lt; ' ';\n            cout &lt;&lt; '\\n';\n        }\n    }\n}\n\nint main()\n{\n    ios::sync_with_stdio(0), cin.tie(0), cout.tie(0);\n    int t; cin &gt;&gt; t;\n    while (t--)solve();\n    return 0;\n}\n</code></pre>"},{"location":"CF/2048/#f","title":"F","text":"<p>\u5148\u5bf9\u9898\u610f\u505a\u4e00\u4e2a\u8f6c\u5316\uff1a\u6ce8\u610f\u5230 \\(\\lceil x/k\\rceil -1 = \\lfloor (x-1)/k\\rfloor\\) \u3002</p> <p>\u4e5f\u5c31\u662f\u4e0e 1 \u7684\u5dee\u503c\u5728\u64cd\u4f5c\u4e2d\u662f\u4e0b\u53d6\u6574\u9664\u6cd5\uff0c\u6240\u4ee5\u8ba9 \\(a[i] = a[i] - 1\\) \uff0c\u8981\u6c42\u8f6c\u5316\u4e3a\u4f7f \\(a[i]\\) \u5747\u4e3a 0 \u3002</p> <p>\u94a6\u5b9a\u4e00\u4e2a \\(x\\) \u4f7f\u5f97 \\(b_x\\) \u4e3a\u6240\u64cd\u4f5c\u7684\u533a\u95f4\u7684\u6700\u5c0f\u503c\uff0c\u8d2a\u5fc3\u53ef\u4ee5\u786e\u5b9a\u6211\u4eec\u64cd\u4f5c\u7684\u533a\u95f4\u4f1a\u6269\u5c55\u5230\u5355\u4fa7\u7b2c\u4e00\u4e2a\u5927\u4e8e \\(b_i\\) \u7684\u70b9\u6216\u8fb9\u754c\u3002</p> <p>\u8fd9\u662f\u4e00\u4e2a\u7ecf\u5178\u7684\u7b1b\u5361\u5c14\u6811\u601d\u8def\uff0c\u6211\u4eec\u4ee5 \\(b_i\\) \u4e3a\u5c0f\u6839\u5806\u5efa\u51fa\u6811\u3002\u8fd9\u6837\u6240\u6709\u7684\u64cd\u4f5c\u90fd\u662f\u4f5c\u7528\u5728\u4e00\u9897\u5b50\u6811\u4e0a\u3002</p> <p>\u8003\u8651\u6811\u4e0aDP\uff1a\\(dp[i][j]\\)\u8868\u793a\u5bf9\u4ee5 \\(i\\) \u4e3a\u6839\u7684\u5b50\u6811\u5171\u64cd\u4f5c \\(j\\) \u6b21\uff0c\u6240\u6709\u53ef\u80fd\u60c5\u51b5\u7684\u6700\u5927\u503c\u7684\u6700\u5c0f\u503c\u3002</p> <p>\u8f6c\u79fb\u65f6\uff0c\u5148\u4e0d\u8003\u8651 \\(u\\) \u672c\u8eab\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u5c31\u662f\u5bf9\u5de6\u53f3\u513f\u5b50\u505a \\(min-max\\) \u5377\u79ef\uff08\u82e5\u4e0d\u5b58\u5728\u5de6\u53f3\u513f\u5b50\u5219\u5168\u4e3a 0\uff09\uff0c\u5373\uff1a</p> \\[dp[u][k]=min_{i+j=k}max(dp[ls][i],dp[rs][j])\\] <p>\u56e0\u4e3a \\(dp[u][i]\\) \u662f\u5173\u4e8e \\(i\\) \u5355\u8c03\u4e0d\u589e\u7684\uff0c\u53ef\u4ee5\u7528\u7c7b\u4f3c\u5f52\u5e76\u6392\u5e8f\u7684\u601d\u8def\u4ee5 \\(O(log)\\) \u7684\u590d\u6742\u5ea6\u5b8c\u6210\u5377\u79ef\u3002</p> <p>\u66f4\u5177\u4f53\u7684\u5c31\u662f\uff0c\u5047\u8bbe \\(dp[u][k]\\) \u7684\u6700\u5c0f\u503c\u4e3a \\(max(dp[ls][i],dp[rs][j])\\) \uff0c\u5f53 \\(k\\) \u6269\u5c55\u5230 \\(k+1\\) \u65f6\uff0c \u6211\u4eec\u8ba9 \\(dp[ls][i]\\) \u548c \\(dp[rs][j]\\) \u8f83\u5927\u7684\u90a3\u4e2a\u7684\u7b2c\u4e8c\u7ef4\u53bb\u52a0 1\u3002</p> <p>\u7136\u540e\u628a \\(u\\) \u8003\u8651\u4e0a\uff0c\u6211\u4eec\u540c\u6837\u53ef\u4ee5\u4ee5 \\(O(log)\\) \u590d\u6742\u5ea6\u5b8c\u6210\u8f6c\u79fb\u3002\u5c31\u662f\u8ba8\u8bba\u662f\u5426\u5b58\u5728\u4f5c\u7528\u5728 \\(u\\) \u4e3a\u6839\u7684\u5b50\u6811\u4e0a\u7684\u64cd\u4f5c\u3002\u5373\uff1a</p> \\[ dp[u][i] = max(dp[u][i],\\lfloor dp[u][i-1]/b[u]\\rfloor)\\] <p>\u4e8b\u5b9e\u4e0a\u4e0a\u5f0f\u6210\u7acb\u8fd8\u9700\u8981\u4e00\u4e2a\u6761\u4ef6\uff0c\u5c31\u662f\u53ef\u4ee5\u968f\u610f\u8c03\u6362\u64cd\u4f5c\u987a\u5e8f\u3002\u8fd9\u53ef\u4ee5\u7531 \\(\\lfloor \\lfloor x/a\\rfloor/b\\rfloor=\\lfloor x/(ab)\\rfloor\\) \u4fdd\u8bc1\u3002</p> <p>\u8fd9\u91cc\u7684 \\(dp[u][i-1]\\) \u662f\u5df2\u7ecf\u8003\u8651\u4e0a \\(u\\) \u7684\u7ed3\u679c\u3002\u7279\u522b\u7684 \\(dp[u][0] = max(dp[u][0],a[u])\\) \u3002</p> <p>\u7b54\u6848\u5c31\u662f\u6700\u5c0f\u7684 \\(i\\) \u6ee1\u8db3 \\(dp[root][i]=0\\) \u3002\uff08\u5176\u4e2droot\u4e3a\u7b1b\u5361\u5c14\u6811\u7684\u6839\uff09</p> \u4ee3\u7801 <pre><code>#include&lt;bits/stdc++.h&gt;\n#define ll long long\n\nusing namespace std;\nconst int N = 2e5 + 10;\nconst ll INF = 1e18 + 1;\nll dp[N][61], a[N], b[N];\nint ln[N], rn[N], n, rt;\nvoid dfs(int u)\n{\n\n    for (int i = 0; i &lt;= 60; i++)dp[u][i] = 0;\n    if (ln[u] != -1) {\n        dfs(ln[u]);\n        for (int i = 0; i &lt;= 60; i++)dp[u][i] = dp[ln[u]][i];\n    }\n    if (rn[u] != -1) {\n        dfs(rn[u]);\n        int i = 0, j = 0;\n        ll g[61];\n        memcpy(g, dp[u], sizeof g);\n        for (int k = 0; k &lt;= 60; k++)\n        {\n            if (i + j &lt; k) {\n                if (i == 60)j++;\n                else if (j == 60)i++;\n                else if (g[i] &gt;= dp[rn[u]][j])i++;\n                else j++;\n            }\n            dp[u][k] = max(g[i], dp[rn[u]][j]);\n        }\n    }\n    dp[u][0] = max(dp[u][0], a[u]);\n    for (int i = 1; i &lt;= 60; i++)dp[u][i] = min(max(dp[u][i], a[u]), dp[u][i - 1] / b[u]);\n}\n\nvoid solve()\n{\n    cin &gt;&gt; n;\n    for (int i = 0; i &lt; n; i++)cin &gt;&gt; a[i], a[i]--;\n    for (int i = 0; i &lt; n; i++)cin &gt;&gt; b[i];\n\n    for (int i = 0; i &lt; n; i++)ln[i] = rn[i] = -1;\n    vector&lt;int&gt;stk;\n    for (int i = 0; i &lt; n; i++)\n    {\n        int last = -1;\n        while (!stk.empty() &amp;&amp; b[stk.back()] &gt; b[i])last = stk.back(), stk.pop_back();\n        if (!stk.empty())rn[stk.back()] = i;\n        if (last != -1)ln[i] = last;\n        stk.push_back(i);\n    }\n\n    rt = stk[0];\n    dfs(rt);\n\n    for (int i = 0; i &lt;= 60; i++) {\n        if (dp[rt][i] == 0) {\n            cout &lt;&lt; i &lt;&lt; '\\n';\n            return;\n        }\n    }\n}\n\nint main()\n{\n    ios::sync_with_stdio(0), cin.tie(0), cout.tie(0);\n    int t; cin &gt;&gt; t;\n    while (t--)solve();\n    return 0;\n}\n</code></pre>"},{"location":"algorithm/matrix%20tree/","title":"\u77e9\u9635\u6811\u5b9a\u7406","text":""},{"location":"algorithm/%E6%AC%A7%E6%8B%89%E5%9B%9E%E8%B7%AF%E7%9B%B8%E5%85%B3%E9%97%AE%E9%A2%98/","title":"\u6b27\u62c9\u56de\u8def\u76f8\u5173\u95ee\u9898","text":""},{"location":"algorithm/%E6%AC%A7%E6%8B%89%E5%9B%9E%E8%B7%AF%E7%9B%B8%E5%85%B3%E9%97%AE%E9%A2%98/#_2","title":"\u5b9a\u4e49\uff1a","text":"<p>\u6309\u7167\u662f\u5426\u56de\u5230\u51fa\u53d1\u70b9\u5206\u522b\u5b9a\u4e49\u4e3a\u6b27\u62c9\u56de\u8def\u548c\u6b27\u62c9\u8def\u5f84\uff0c\u540c\u65f6\u4e5f\u5206\u522b\u79f0\u56fe\u4e3a\u6b27\u62c9\u56fe\u548c\u534a\u6b27\u62c9\u56fe\u3002</p> <p>\u6ce8\uff1a\u4ee5\u4e0b\u8ba8\u8bba\u5747\u5efa\u7acb\u5728\u56fe\u8054\u901a\u7684\u57fa\u7840\u4e0a\uff0c\u4e14\u6b27\u62c9\u56de\u8def\u5e76\u4e0d\u5c40\u9650\u4e8e\u7b80\u5355\u56fe\u3002</p>"},{"location":"algorithm/%E6%AC%A7%E6%8B%89%E5%9B%9E%E8%B7%AF%E7%9B%B8%E5%85%B3%E9%97%AE%E9%A2%98/#_3","title":"\u5b58\u5728\u6027\u5224\u5b9a\uff1a","text":"<ol> <li>\u65e0\u5411\u56fe\u4e3a\u6b27\u62c9\u56fe\u5f53\u4e14\u4ec5\u5f53\u65e0\u5947\u5ea6\u70b9\u3002</li> <li>\u65e0\u5411\u56fe\u4e3a\u534a\u6b27\u62c9\u56fe\u5f53\u4e14\u4ec5\u5f53\u5b58\u57282\u4e2a\u5947\u5ea6\u70b9\u3002</li> <li>\u6709\u5411\u56fe\u4e3a\u6b27\u62c9\u56fe\u5f53\u4e14\u4ec5\u5f53\u6240\u6709\u70b9\u5165\u5ea6\u7b49\u4e8e\u51fa\u5ea6\u3002</li> <li>\u6709\u5411\u56fe\u4e3a\u534a\u6b27\u62c9\u56fe\u5f53\u4e14\u4ec5\u5f53\u5b58\u5728\u4e00\u4e2a\u70b9\u5165\u5ea6\u7b49\u4e8e\u51fa\u5ea6 + 1\uff0c\u4e00\u4e2a\u70b9\u5165\u5ea6\u7b49\u4e8e\u51fa\u5ea6 - 1\u3002</li> </ol>"},{"location":"algorithm/%E6%AC%A7%E6%8B%89%E5%9B%9E%E8%B7%AF%E7%9B%B8%E5%85%B3%E9%97%AE%E9%A2%98/#_4","title":"\u751f\u6210\u6b27\u62c9\u56de\u8def\uff1a","text":"<p>Hierholzer \u7b97\u6cd5\uff1a  \u8bc1\u660e\u6682\u65f6\u4e0d\u4f1a\uff0c\u636e\u8bf4\u4e0e\u5b58\u5728\u6027\u5224\u5b9a\u8bc1\u660e\u7b49\u4ef7\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\\(O(n+m)\\)\u3002 </p> <p>\u6a21\u677f\u5982\u4e0b\uff1a\u9009\u62e9\u5408\u9002\u8d77\u70b9\u5f00\u59cbdfs\uff0c\u8def\u5f84\u5012\u5e8f\u5b58\u50a8\u5728res\u4e2d\uff0c\u5bf9\u4e8e\u6b27\u62c9\u56de\u8def\uff0c\u9996\u5c3e\u5747\u4e3a\u8d77\u70b9\u3002 <pre><code>//\u6709\u5411\u56fe\nint cur[N];\nvector&lt;int&gt;path;\nvector&lt;vector&lt;int&gt;&gt;e;\nvoid dfs(int u)\n{\n    for (int&amp; i = cur[u]; i &lt; e[u].size(); i = cur[u])\n    {\n        i++;\n        dfs(e[u][i]);\n    }\n    path.push_back(u);\n}\n//\u65e0\u5411\u56fe\nint h[N], e[N &lt;&lt; 1], ne[N &lt;&lt; 1], idx = 2, cur[N];\nbool vis[N];\nvoid dfs(int x) {\n    for (int&amp; i = cur[x]; i;) {\n        if (!vis[i]) {\n            vis[i] = vis[i ^ 1] = 1;\n            dfs(e[i]);\n        }\n        i = ne[i];\n    }\n    res.push_back(x);\n}\n</code></pre> \u5bf9\u4e8e\u6c42\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u6b27\u62c9\u8def\u5f84\uff0c\u53ea\u9700\u5728\u7b97\u6cd5\u6267\u884c\u524d\u5bf9\u51fa\u8fb9\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u5373\u53ef\u3002</p>"},{"location":"algorithm/%E6%AC%A7%E6%8B%89%E5%9B%9E%E8%B7%AF%E7%9B%B8%E5%85%B3%E9%97%AE%E9%A2%98/#_5","title":"\u6027\u8d28\u4e0e\u7ed3\u8bba\uff1a","text":"<ol> <li>\u5bf9\u4e8e\u5b58\u5728 \\(2k (k &gt; 0)\\) \u4e2a\u5947\u5ea6\u9876\u70b9\u7684\u56fe\uff0c\u81f3\u5c11\u9700\u8981 \\(k\\) \u7b14\u624d\u80fd\u753b\u5b8c\u3002\u4e14\u6bcf\u6b21\u90fd\u9700\u8981\u9009\u62e9\u4e24\u4e2a\u5947\u5ea6\u9876\u70b9\u4f5c\u4e3a\u8d77\u70b9\u548c\u7ec8\u70b9\u3002</li> <li>\u5bf9\u4e8e\u65e0\u5411\u56fe \\(G\\) \uff0c\u6240\u6709\u9876\u70b9\u7684\u5ea6\u90fd\u662f\u5076\u6570\u7b49\u4ef7\u4e8e\u56fe \\(G\\) \u6709\u5708\u5206\u89e3\u3002\u5708\u5206\u89e3\u5373\u4e3a\u7528\u82e5\u5e72\u4e2a\u5708\uff08\u4e0d\u91cd\u590d\u7ecf\u8fc7\u9876\u70b9\u7684\u56de\u8def\uff09\u4f7f\u56fe \\(G\\) \u7684\u6bcf\u4e00\u6761\u8fb9\u6070\u7ecf\u8fc7\u4e00\u6b21\u3002</li> <li>\u6709\u5411\u6b27\u62c9\u56fe\u4e2d\u4ee5\u4efb\u610f\u4e00\u70b9\u4e3a\u6839\u7684\u5185\u5411\u6811\u4e2a\u6570\u5747\u76f8\u540c\u3002</li> </ol>"},{"location":"algorithm/%E6%AC%A7%E6%8B%89%E5%9B%9E%E8%B7%AF%E7%9B%B8%E5%85%B3%E9%97%AE%E9%A2%98/#_6","title":"\u76f8\u5173\u8ba1\u6570\uff1a","text":"<p>\u95ee\u9898\uff1a\u6c42\u6709 \\(n\\) \u4e2a\u8282\u70b9\u4e14\u65e0\u5947\u5ea6\u70b9\u7684\u6709\u6807\u53f7\u7b80\u5355\u65e0\u5411\u56fe\u4e2a\u6570\u3002 </p> <p>\u5148\u8003\u8651\u524d \\(n - 1\\) \u4e2a\u9876\u70b9\uff0c\u53d1\u73b0\u65e0\u8bba\u5982\u4f55\u8fde\u8fb9\uff0c\u90fd\u53ef\u4ee5\u901a\u8fc7 \\(n\\) \u53f7\u70b9\u6765\u5fae\u8c03\u6ee1\u8db3\u5747\u4e3a\u5076\u5ea6\u70b9\u7684\u6761\u4ef6\uff0c\u4e14\u5bf9\u5e94\u7684 \\(n\\) \u53f7\u70b9\u8fde\u8fb9\u65b9\u5f0f\u662f\u552f\u4e00\u7684\uff0c\u4e8e\u662f\u65b9\u6848\u6570\u4e3a \\(2^{\\binom{n-1}{2}}\\)\u3002 </p> <p>\u95ee\u9898\uff1a\u6c42\u6709 \\(n\\) \u4e2a\u8282\u70b9\u7684\u6709\u6807\u53f7\u65e0\u5411\u6b27\u62c9\u56fe\u4e2a\u6570\u3002 </p> <p>\u8bb0 \\(f_i\\) \u4e3a\u6709 \\(n\\) \u4e2a\u8282\u70b9\u7684\u6709\u6807\u53f7\u65e0\u5411\u6b27\u62c9\u56fe\u4e2a\u6570\uff0c\\(g_i\\) \u4e3a\u6709 \\(n\\) \u4e2a\u8282\u70b9\u4e14\u65e0\u5947\u5ea6\u70b9\u7684\u6709\u6807\u53f7\u7b80\u5355\u65e0\u5411\u56fe\u4e2a\u6570\u3002\u5219 \\(g_i = 2^{\\binom{n-1}{2}}\\)\uff0c\u800c\\(f_i = g_i - g_i\\) \u4e2d\u4e0d\u8054\u901a\u7684\u90e8\u5206\u3002 \u540e\u8005\u53ef\u4ee5\u901a\u8fc7\u679a\u4e3e \\(i\\) \u53f7\u70b9\u6240\u5728\u8fde\u901a\u5757\u5927\u5c0f\u786e\u5b9a\uff0c\u5373 \\(\\sum_{j=1}^{i-1}f_jg_{i-j}\\binom{i-1}{j-1}\\)\u3002</p> <p>\u4e8e\u662f \\(f_i = g_i - \\sum_{j=1}^{i-1}f_jg_{i-j}\\binom{i-1}{j-1}\\)\u3002</p> <p>\u751f\u6210\u51fd\u6570\uff1a\u5f85\u66f4\u65b0\u3002</p> <p>\u95ee\u9898\uff1a \u7ed9\u5b9a \\(n\\) \u4e2a\u8282\u70b9 \\(m\\) \u6761\u8fb9\u7684\u65e0\u5411\u8fde\u901a\u56fe\uff0c\u6c42\u8be5\u56fe\u6709\u591a\u5c11\u65e0\u5947\u5ea6\u70b9\u7684\u751f\u6210\u5b50\u56fe\u3002</p> <p>\u8003\u8651\u539f\u56fe\u4efb\u610f\u4e00\u9897\u751f\u6210\u6811\uff0c\u5bf9\u4e8e\u975e\u6811\u8fb9\uff0c\u6211\u4eec\u968f\u4fbf\u51b3\u5b9a\u662f\u5426\u4fdd\u7559\uff0c\u5bf9\u4e8e\u6811\u8fb9\uff0c\u6211\u4eec\u5148\u968f\u610f\u9009\u62e9\u4e00\u4e2a\u70b9\u4e3a\u6839\uff0c\u7136\u540e\u81ea\u5e95\u5411\u4e0a\u8c03\u6574\u975e\u6839\u7ed3\u70b9\u4e3a\u5076\u5ea6\u70b9\u3002 \u4e5f\u5c31\u662f\u8bf4\u6811\u8fb9\u662f\u5426\u4fdd\u7559\u662f\u786e\u5b9a\u7684\uff0c\u56e0\u4e3a\u5947\u5ea6\u70b9\u7684\u4e2a\u6570\u4e3a\u5076\u6570\uff0c\u6240\u4ee5\u6b64\u65f6\u7684\u6839\u5fc5\u4e3a\u5076\u5ea6\u70b9\uff0c\u7b26\u5408\u6761\u4ef6\u3002</p> <p>\u7efc\u4e0a\uff0c\u5408\u6cd5\u7684\u751f\u6210\u5b50\u56fe\u4e2a\u6570\u4e3a \\(2^{m-n+1}\\)\u3002</p> <p>\u95ee\u9898\uff1a \u7ed9\u5b9a \\(n\\) \u4e2a\u8282\u70b9 \\(m\\) \u6761\u8fb9\u7684\u65e0\u5411\u8fde\u901a\u56fe\uff0c\u6c42\u4ece \\(1\\) \u53f7\u70b9\u5f00\u59cb\u7684\u6b27\u62c9\u56de\u8def\u6570\u3002 </p> <p>\u5148\u627e\u5230\u4e00\u68f5\u4ee5 1 \u53f7\u70b9\u4e3a\u6839\u7684\u5185\u5411\u6811\uff08\u5373\u6bcf\u4e2a\u70b9\u6709\u552f\u4e00\u7684\u4e00\u6761\u8def\u5f84\u5230\u8fbe 1 \u53f7\u70b9\uff09\uff0c\u7136\u540e\u4e3a\u4e00\u4e2a\u70b9\u7684\u6240\u6709\u4e0d\u5728\u6811\u4e0a\u7684\u51fa\u8fb9\u5b9a\u5e8f\u3002\u5219\u4e0a\u8ff0\u65b9\u6848\u4e0e\u6b27\u62c9\u56de\u8def\u4e00\u4e00\u5bf9\u5e94\u3002</p> <p>\u8be6\u7ec6\u8bc1\u660e\u89c12018\u56fd\u5bb6\u96c6\u8bad\u961f\u8bba\u6587\u300a\u6b27\u62c9\u56fe\u76f8\u5173\u7684\u751f\u6210\u4e0e\u8ba1\u6570\u95ee\u9898\u63a2\u7a76\u300b\u3002</p> <p>\u6839\u636e\u4e0a\u8ff0\u7ed3\u8bba\uff0c\u8bb0 \\(T_i\\) \u4e3a \u4ee5 \\(i\\) \u4e3a\u6839\u7684\u5185\u5411\u6811\u6570\u91cf\uff0c\\(d_i\\) \u4e3a \\(i\\) \u53f7\u70b9\u7684\u51fa\u5ea6\u3002\u5bf9 \\(1\\) \u53f7\u70b9\u5b9a\u5e8f\uff0c\u6211\u4eec\u6709 \\(d_1!\\) \u79cd\u65b9\u6848\uff0c\u800c\u5bf9\u975e\u6839\u7ed3\u70b9 \\(i\\) \u5b9a\u5e8f\uff0c\u6211\u4eec\u6709 \\((d_i-1)!\\) \u79cd\u65b9\u6848\u3002 \u6240\u4ee5\u6240\u6c42\u65b9\u6848\u6570 \\(=T_1d_1!\\prod_{i = 2}^{n}(d_i-1)!\\) \u3002</p> <p>\u95ee\u9898\uff1a\u7ed9\u5b9a \\(n\\) \u4e2a\u8282\u70b9 \\(m\\) \u6761\u8fb9\u7684\u6709\u5411\u6b27\u62c9\u56fe\uff0c\u6c42\u6b27\u62c9\u56de\u8def\u6570\u3002 \uff08BEST \u5b9a\u7406\uff09</p> <p>\u56e0\u4e3a\u6b27\u62c9\u56de\u8def\u662f\u5faa\u73af\u540c\u6784\u7684\uff0c\u4e3a\u4e86\u907f\u514d\u91cd\u590d\u8ba1\u6570\uff0c\u6211\u4eec\u6309\u7167\u6700\u5c0f\u8868\u793a\u6cd5\u786e\u5b9a\u8d77\u70b9\uff0c\u5373\u7b2c\u4e00\u6761\u8fb9\u603b\u662f \\(1\\) \u53f7\u7ed3\u70b9\u7f16\u53f7\u6700\u5c0f\u7684\u51fa\u8fb9\u3002 \u5206\u6790\u53ef\u77e5\u5bf9\u4e8e\u4e0a\u4e00\u4e2a\u95ee\u9898\u5f97\u5230\u7684\u7b54\u6848\uff0c\u6bcf\u4e00\u6761\u6b27\u62c9\u56de\u8def\u90fd\u4f1a\u91cd\u590d\u7edf\u8ba1 \\(d_1\\) \u6b21\uff0c\u4e8e\u662f\u6b27\u62c9\u56de\u8def\u6570\u91cf\\(=T_1\\prod_{i = 1}^{n}(d_i-1)!\\) \u3002</p> <p>\u6ce8\uff1a\\(T_i\\) \u53ef\u4ee5\u901a\u8fc7\u77e9\u9635\u6811\u5b9a\u7406\u6c42\u51fa\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(O(n^3)\\) \u3002</p>"},{"location":"algorithm/%E6%AC%A7%E6%8B%89%E5%9B%9E%E8%B7%AF%E7%9B%B8%E5%85%B3%E9%97%AE%E9%A2%98/#_7","title":"\u9898\u5355\uff1a","text":"<ul> <li>\u6709\u5411\u56fe\u6a21\u677f\u9898</li> <li>\u65e0\u5411\u56fe\u6a21\u677f\u9898</li> <li>CF 788 B</li> <li>BZOJ3706</li> <li>\u6df7\u5408\u6b27\u62c9\u56de\u8def</li> <li>POJ 1708</li> </ul>"},{"location":"algorithm/%E6%AC%A7%E6%8B%89%E5%9B%9E%E8%B7%AF%E7%9B%B8%E5%85%B3%E9%97%AE%E9%A2%98/#_8","title":"\u53c2\u8003\u8d44\u6599\uff1a","text":"<ul> <li>OI-WIKI</li> <li>\u300a\u6b27\u62c9\u56fe\u76f8\u5173\u7684\u751f\u6210\u4e0e\u8ba1\u6570\u95ee\u9898\u63a2\u7a76\u300b\u5b66\u4e60\u7b14\u8bb0</li> <li>2018\u56fd\u5bb6\u96c6\u8bad\u961f\u8bba\u6587\u300a\u6b27\u62c9\u56fe\u76f8\u5173\u7684\u751f\u6210\u4e0e\u8ba1\u6570\u95ee\u9898\u63a2\u7a76\u300b</li> </ul>"}]}